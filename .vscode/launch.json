{
    // Launch configuration for debugging Rust code inside VS Code with LLDB
    // This configuration is used by the extension 'LLDB Debugger'
    // 
    // The necessary extension may be downloaded at: https://marketplace.visualstudio.com/items?itemName=vadimcn.vscode-lldb
    // Alternatively, the repository for it may be found at: https://github.com/vadimcn/vscode-lldb.git
    "version": "0.1.0",
    "configurations": [
        {
            "type": "gdb",
            "request": "launch",
            "name": "deno-info-exit-code-",
            "target": "${workspaceFolder}/target/debug/${workspaceFolderBasename}",
            "cwd": "${workspaceRoot}",
            "pathSubstitutions": {
                "/rustc/82e1608dfa6e0b5569232559e3d385fea5a93112/": " /home/tannal/.rustup/toolchains/1.75.0-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/"
            },
            "arguments": "info https://deno.land/std@0.178.0/http/",
            "valuesFormatting": "parseText"
        },
        {
            "name": "Debug with LLDB",
            "type": "lldb",
            "request": "launch",
            // The following configuration option, 'program', may in some cases need to be modified. 
            // This is so that the correct executable is targeted.
            // For example, on non-Windows systems, the ".exe" suffix must be removed. 
            // Alternatively, the directory that rustc/cargo outputs debug builds may change in future
            // As such, this path would have to change accordingly.
            "program": "${workspaceFolder}/target/debug/${workspaceFolderBasename}",
            // If you wish to supply arguments/parameters to the program, supply them below:
            "args": [
                "info",
                "zzazz.com"
            ],
            // Working folder for execution. Change as necessary if program requires a different value:
            "cwd": "${workspaceFolder}",
            "terminal": "external",
            "stopOnEntry": false,
            // Instructs LLVM to apply special Rust-language-specific functionality to its analysis:
            "sourceLanguages": [
                "rust"
            ]
        },
        {
            "name": "import-ext:core",
            "type": "lldb",
            "request": "launch",
            "program": "${workspaceFolder}/target/debug/${workspaceFolderBasename}",
            "args": [
                "run",
                "-A",
                "local/import.js"
            ],
            "cwd": "${workspaceFolder}",
            "terminal": "external",
            "stopOnEntry": false,
            "sourceLanguages": [
                "rust"
            ]
        },
    ]
}